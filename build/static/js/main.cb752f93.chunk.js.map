{"version":3,"sources":["components/Pokemon.jsx","components/nav.jsx","components/modal.jsx","App.js","serviceWorker.js","index.js"],"names":["Pokemon","state","getAbilities","props","abilities","length","map","ability","key","id","name","getWeakness","poke","weakness","weak","getTypes","types","type","className","onChange","e","target","checked","src","this","thumbnail_image","alt","ThumbnailAltText","width","height","Component","Nav","href","onClick","onChangeCategory","categories","category","slug","placeholder","value","onFilter","AddToCat","show","handleClose","setState","handleShow","submitForm","preventDefault","console","log","Button","variant","Modal","onHide","Header","closeButton","Title","Body","method","action","onSubmit","c","pokesToCat","Footer","URL","selectedPokeIds_temp","App","pokes","selectedPokeIds","getPokemons","url","a","async","fetch","response","json","data","getCategory","filterPokemon","filteredPokes","filter","el","indexOf","push","index","splice","onSelectPoke","align","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb752f93.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Pokemon extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div className=\"single-item h-list\">\n          <div className=\"row p-10\">\n            <input\n              type=\"checkbox\"\n              name=\"add-to\"\n              onChange={e => {\n                this.props.onChange(e.target.checked, this.props.poke.id);\n              }}\n            />\n            <img\n              src={this.props.poke.thumbnail_image}\n              alt={this.props.poke.ThumbnailAltText}\n              width=\"100\"\n              height=\"100\"\n            />\n            <div className=\"col-8 details\">\n              <h4>{this.props.poke.name}</h4>\n              {this.getTypes()}\n              <div className=\"row details\">\n                <div className=\"col-6\">\n                  <h5>Abilities</h5>\n                  <ul>{this.getAbilities()}</ul>\n                </div>\n                <div className=\"col-6\">\n                  <h5>Weakness</h5>\n                  {this.getWeakness()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr />\n      </div>\n    );\n  }\n\n  getAbilities = () => {\n    if (this.props.abilities.length > 0) {\n      return this.props.abilities.map(ability => (\n        <li key={ability.id}>{ability.name}</li>\n      ));\n    }\n  };\n\n  getWeakness = () => {\n    if (this.props.poke.weakness.length > 0) {\n      return (\n        <span>\n          {this.props.poke.weakness.map(weak => (\n            <li>{weak.name}</li>\n          ))}\n        </span>\n      );\n      // this.props.poke.weakness.map(weak => (\n      // <li key={weak.id}>{weak.name}</li>\n\n      // ));\n    }\n  };\n\n  getTypes = () => {\n    if (this.props.poke.types.length > 0) {\n      return this.props.poke.types.map(type => (\n        <div key={type.id} className=\"chip\">\n          {type.name}\n        </div>\n      ));\n    }\n  };\n}\n\nexport default Pokemon;\n","import React, { Component } from \"react\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <a href=\"#\" onClick={() => this.props.onChangeCategory(\"\")}>\n                All\n              </a>\n            </li>\n            {this.props.categories.map(category => (\n              <li key={category.id}>\n                <a\n                  href=\"#\"\n                  onClick={() => this.props.onChangeCategory(category.slug)}\n                >\n                  {category.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <hr className=\"divider\" />\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            placeholder=\"Search pokemon in this category\"\n            onChange={value => {\n              this.props.onFilter(value.target.value);\n            }}\n          />\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\n\nclass AddToCat extends Component {\n  //   const [show, setShow] = useState(false);\n  state = {\n    show: false\n  };\n\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  };\n  handleShow = () => {\n    this.setState({\n      show: true\n    });\n  };\n\n  submitForm = (e) => {\n      e.preventDefault()\n      console.log('jkjsdfkl ')\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"primary\" className=\"btn-bot\" onClick={this.handleShow}>\n          Add to category\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add to Category</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form\n              method=\"POST\"\n              action=\"http://127.0.0.1:8000/api/v1/add-to\"\n              onSubmit={(e)=> this.submitForm}\n            >\n              <p>Select a category</p>\n              <select className=\"form-control\">\n                {this.props.categories.map(c => (\n                  <option value={c.id}>{c.name}</option>\n                ))}\n              </select>\n              <input\n                type=\"hidden\"\n                name=\"pokes[]\"\n                value={this.props.pokesToCat}\n                id=\"\"\n              />\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleClose}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AddToCat;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Pokemon from \"./components/Pokemon\";\nimport Nav from \"./components/nav\";\nimport AddToCat from \"./components/modal\";\n\nlet URL = \"http://127.0.0.1:8000/api/v1/\";\nlet selectedPokeIds_temp = [];\n\nclass App extends Component {\n  state = {\n    pokes: [],\n    categories: [],\n    selectedPokeIds: []\n  };\n\n  componentDidMount() {\n    this.getPokemons(URL);\n    this.getCategory();\n  }\n\n  getPokemons = async url => {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      pokes: data\n    });\n  };\n\n  getCategory = async () => {\n    const URL = \"http://127.0.0.1:8000/api/v1/categories\";\n    const response = await fetch(URL);\n    const data = await response.json();\n    this.setState({\n      categories: data\n    });\n  };\n\n  filterPokemon = value => {\n    if (value === \"\") {\n      this.getPokemons(URL);\n    } else {\n      let pokes = this.state.pokes;\n      let filteredPokes = pokes.filter(el => {\n        return el.name.indexOf(value) !== -1;\n      });\n      this.setState({\n        pokes: filteredPokes\n      });\n    }\n  };\n\n  onSelectPoke(e, id) {\n    if (e) {\n      selectedPokeIds_temp.push(id);\n    } else {\n      if (selectedPokeIds_temp.indexOf(id) !== -1) {\n        let index = selectedPokeIds_temp.indexOf(id);\n        selectedPokeIds_temp.splice(index);\n      }\n    }\n    this.setState({\n      selectedPokeIds: selectedPokeIds_temp\n    });\n    // console.log(selectedPokeIds);\n    // if (selectedPokeIds.length > 0) {\n    //   console.log(\"Selected atleast one..!\");\n    // } else {\n    //   console.log(\"Not..!\");\n    // }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Nav\n            categories={this.state.categories}\n            onChangeCategory={slug => this.getPokemons(URL + slug)}\n            onFilter={value => {\n              this.filterPokemon(value);\n            }}\n          />\n          <div className=\"items\">\n            {this.state.pokes.map(poke => (\n              <Pokemon\n                key={poke.id}\n                poke={poke}\n                abilities={poke.abilities}\n                onChange={(e, id) => this.onSelectPoke(e, id)}\n              />\n            ))}\n          </div>\n        </div>\n        {this.state.selectedPokeIds.length > 0 && (\n          <div className=\"Center\" align=\"center\">\n            <AddToCat\n              categories={this.state.categories}\n              pokesToCat={this.state.selectedPokeIds}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}